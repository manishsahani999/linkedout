{"version":3,"sources":["actions/constants.js","reducers/authentication.reducer.js","reducers/users.reducer.js","reducers/job.reducer.js","reducers/index.js","helpers/store.js","helpers/history.js","api.js","services/user.services.js","services/jobs.service.js","actions/user.actions.js","routes.js","pages/Index.js","pages/Login.js","pages/employer/Dashboard.js","pages/worker/Dashboard.js","actions/job.action.js","pages/employer/jobs/Workers.js","pages/employer/jobs/Create.js","pages/employer/jobs/Show.js","pages/worker/jobs/WorkerJobIndex.js","components/Custom/Carousal.js","pages/worker/jobs/WorkerJobShow.js","pages/worker/jobs/WorkerJobApply.js","pages/employer/jobs/Index.js","App.js","index.js","assets/img/pablo-done.png"],"names":["userConstants","jobConstant","jwt","localStorage","getItem","isEmployer","initialState","loggedIn","JSON","parse","user","jobs","job","employees","applicants","rootReducer","combineReducers","authentication","state","action","type","payload","loadingBar","next","message","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","loadingBarMiddleware","history","createBrowserHistory","instance","axios","create","baseURL","AUTH_TOKEN","defaults","headers","common","handle","res","status","removeItem","error","data","statusText","Promise","reject","userService","api","post","then","token","setItem","get","jobsService","id","patch","userActions","login","username","password","dispatch","showLoading","hideLoading","success","err","failure","toString","logout","console","info","getUser","setTimeout","__JOB_INDEX","__JOB_SHOW","__JOB_WORKERS_SHOW","__WORKER_JOB_SHOW","__WORKER_JOB_APPLY","Index","className","style","background","position","Container","zIndex","paddingLeft","paddingRight","borderRadius","to","Button","color","outline","size","Login","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","email","auth","this","bottom","right","width","alt","marginTop","src","require","Row","Col","md","fontSize","Form","onSubmit","FormGroup","Input","onChange","placeholder","onClick","border","React","Component","mapDispatchToProps","connected","connect","EmployersDashboard","loading","me","paddingTop","length","href","filter","item","requirment","WorkersDashboard","jobActions","postJob","push","getJob","getJobWorkers","getAllJobsForWorker","apply","updataApplicationStatus","getEmployerJobs","Workers","match","params","_id","title","numberOfPeople","JobsCreate","description","location","budget","height","JobsShow","update","map","key","comment","Badge","pill","WorkerJobIndex","Card","CardBody","CardTitle","tag","CardFooter","renderCard","carouselItems","altText","caption","CustomCarousal","useState","activeIndex","setActiveIndex","animating","setAnimating","onExiting","onExited","nextIndex","previous","Carousel","CarouselIndicators","items","onClickHandler","newIndex","CarouselItem","CarouselCaption","captionText","captionHeader","data-slide","role","WorkerJobShow","renderItem","checkForApplied","employee","check","Applied","WorkerJobApply","JobIndex","App","top","backgroundColor","exact","path","render","component","EmployerRoute","rest","PrivateRoute","pathname","from","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ef4231e7.chunk.js","sourcesContent":["export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE',\n    \n    GET_USER: 'GET_USER',\n};\n\n\nexport const jobConstant = {\n    CREATE_JOB: 'CRATE_JOB',\n    GET_JOB: 'GET_JOB',\n    GET_JOB_WORKERS: 'GET_JOB_WORKERS',\n    GET_ALL_JOBS_FOR_WORKERS: 'GET_ALL_JOBS_FOR_WORKERS',\n    APPLY_FOR_JOB: 'APPLY_FOR_JOB',\n    UPDATE_JOB_APPLICATION_STATUS: 'UPDATE_JOB_APPLICATION_STATUS',\n    GET_EMPLOYER_JOBS: 'GET_EMPLOYER_JOBS'\n}","import { userConstants } from '../actions/constants';\n\nlet jwt = localStorage.getItem('token');\nlet isEmployer = localStorage.getItem('isEmployer');\n\nconst initialState = (jwt) ? { loggedIn: true, isEmployer: JSON.parse(isEmployer) } : { loggedIn: false, isEmployer: false };\n\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggedIn: true,\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        isEmployer: action.payload.isEmployer\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {\n        loggedIn: false,\n      };\n    case userConstants.LOGOUT:\n      return {\n        loggedIn: false,\n      };\n    default:\n      return state\n  }\n}","import { userConstants } from '../actions/constants';\n\nlet user = {\n    jobs: []\n}\n\nexport function userReducer(state = user, action) {\n  switch (action.type) {\n    case userConstants.GET_USER:\n      const user = { ...action.payload }\n      return user\n    default:\n      return state\n  }\n}","import { jobConstant } from '../actions/constants';\n\nlet job = {\n  employees: [],\n  applicants: []\n}\n\nexport function jobReducer(state = job, action) {\n  switch (action.type) {\n    case jobConstant.CREATE_JOB:\n      const job = { ...action.payload }\n      return job;\n    case jobConstant.GET_JOB: {\n      const next = {...action.payload};\n      return next;\n    }\n    case jobConstant.GET_JOB_WORKERS: {\n      const next = {...action.payload};\n      return next;\n    }\n    case jobConstant.GET_ALL_JOBS_FOR_WORKERS: {\n      const next = { jobs: action.payload};\n      return next;\n    }\n    case jobConstant.APPLY_FOR_JOB: {\n      const next = { ...state, message: action.payload.message};\n      return next;\n    }\n    case jobConstant.GET_EMPLOYER_JOBS: {\n      const next = { jobs: action.payload };\n      return next;\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\";\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar'\n\nimport { authentication } from \"./authentication.reducer\";\nimport { userReducer as user } from \"./users.reducer\";\nimport { jobReducer as job } from \"reducers/job.reducer\";\n\nconst rootReducer = combineReducers({\n  authentication,\n  user,\n  loadingBar,\n  job,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar'\nimport rootReducer from 'reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware,\n        loadingBarMiddleware()\n    )\n);","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://35.186.159.34/',\n    // baseURL: 'https://api.tuesday.wtf/api',\n})\n\nlet AUTH_TOKEN = localStorage.getItem('token');\n\nif (AUTH_TOKEN) { instance.defaults.headers.common['Authorization'] = `${AUTH_TOKEN}`; }\n\nexport const setAuthHeaders = (token) => instance.defaults.headers.common['Authorization'] = `${token}`;\n\nexport const handle = (res) => {\n    if (res.status === 401) {\n        localStorage.removeItem('token');\n\n        const error = (res.data) || res.statusText;\n        return Promise.reject(error);\n    }\n\n    return res.data;\n}\n\nexport { instance as api };","import { api } from \"api\";\nimport { handle } from \"api\";\nimport { setAuthHeaders } from \"api\";\n\nconst login = (data) =>\n  api\n    .post(\"/users/login\", data)\n    .then(handle)\n    .then((data) => {\n      setAuthHeaders(data.token);\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"isEmployer\", data.isEmployer);\n\n      return data;\n    });\n\nconst me = () => api.get(\"/users/me\").then(handle);\n\nconst logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"isEmployer\");\n};\n\nexport const userService = {\n  login,\n  logout,\n  me,\n};\n","import { api } from \"api\";\nimport { handle } from \"api\";\n\nconst postJob = (data) =>\n  api\n    .post(\"/jobs/createJob\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then(handle);\n\nconst getJob = (id) => api.get(\"/jobs/\" + id).then(handle);\n\nconst getJobWorkers = (id) => api.get(\"/jobs/\" + id + \"/worker\").then(handle);\n\nconst getAllJobsForWorker = () => api.get(\"/jobs/\").then(handle);\n\nconst apply = (id, data) =>\n  api.patch(\"/jobs/\" + id + \"/apply\", data).then(handle);\n\nconst updataApplicationStatus = (id, status) =>\n  api.post(\"/jobs/application/\" + id + \"\", status).then(handle);\n\nconst getEmployerJobs = () => api.get(\"/jobs/\").then(handle);\n\nexport const jobsService = {\n  postJob,\n  getJob,\n  getJobWorkers,\n  getAllJobsForWorker,\n  apply,\n  updataApplicationStatus,\n  getEmployerJobs\n};\n","import { userService } from \"../services\";\nimport { userConstants } from \"./constants\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\nconst login = (username, password) => {\n  // const request = user => ({ type: userConstants.LOGIN_REQUEST, user });\n  const success = (user) => ({\n    type: userConstants.LOGIN_SUCCESS,\n    payload: user,\n  });\n  const failure = (err) => ({ type: userConstants.LOGIN_FAILURE, err });\n\n  return (dispatch) => {\n    // dispatch(request({ username }));\n    dispatch(showLoading());\n    userService.login(username, password).then(\n      (user) => {\n          dispatch(hideLoading());\n        dispatch(success(user));\n        // history.push('/dashboard')\n      },\n      (err) => {\n        dispatch(failure(err.toString()));\n        // dispatch(hideLoading());\n      }\n    );\n  };\n};\n\nconst logout = () => {\n   console.info('logout')\n  userService.logout();\n  return { type: userConstants.LOGOUT };\n};\n\nconst getUser = () => {\n  return (dispatch) => {\n    dispatch(showLoading());\n    userService.me().then(\n      (user) => {\n        dispatch({ type: userConstants.GET_USER, payload: user });\n        setTimeout(() => {\n          dispatch(hideLoading());\n        }, 2000);\n        return { type: userConstants.GET_USER, payload: user };\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  };\n};\n\nexport const userActions = {\n  login,\n  logout,\n  getUser,\n};\n","export const __LOGIN_ROUTE = '/login';\n\n\n/**\n * Employer Routes\n *\n */\nexport const __EMPLOYER_DASHBOARD = '/employer/dashboard';\nexport const __JOB_INDEX = '/employer/jobs';\nexport const __JOB_CREATE = '/employer/job/create';\nexport const __JOB_SHOW = id => '/employer/job/show/'+id;\nexport const __JOB_WORKERS_SHOW = id => '/employer/job/show/' + id + '/worker';\n\n/**\n * Worker Routes\n *\n */\nexport const __WORKER_DASHBOARD = '/workers/dashboard';\nexport const __WORKER_JOB_INDEX = '/workers/jobs';\nexport const __WORKER_JOB_SHOW = id => '/workers/jobs/show/'+id;\nexport const __WORKER_JOB_APPLY = id => __WORKER_JOB_SHOW(id) + '/apply';","import React from \"react\";\nimport { Container, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { __LOGIN_ROUTE } from \"routes\";\n\nconst Index = () => (\n  <>\n    <div\n      className=\"page-header index-header\"\n      style={{ background: \"white\", position: \"relative\" }}\n    >\n      <Container style={{ zIndex: 1 }}>\n        <div className=\"motto\">\n          <div>\n            {/* <Icon /> */}\n\n            <span className=\"index-icon-text f-righteous\">\n              Linked\n              <span\n                className=\"text-white\"\n                style={{\n                  background: \"#0a66c2\",\n                  paddingLeft: \"1rem\",\n                  paddingRight: \"1rem\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Out\n              </span>\n            </span>\n          </div>\n          <h1 className=\"font-for-motto text-left\">\n            Hire Small scale workers direclty and easily\n          </h1>\n          <h4 className=\"text-dark mb-5 f-anon\">\n            Linkout is a platfrom to ease out the pain of finding jobs and\n            getting hired for small scaled workers.\n          </h4>\n          <Link to={__LOGIN_ROUTE}>\n            <Button\n              className=\"btn-round mr-1\"\n              color=\"dark\"\n              outline\n              size=\"lg\"\n              type=\"button\"\n            >\n              <span className=\"text-dark\">Find Jobs</span>\n            </Button>\n          </Link>\n          <Link to={__LOGIN_ROUTE}>\n            <Button\n              className=\"btn-round mr-1\"\n              color=\"dark\"\n              size=\"lg\"\n              type=\"button\"\n            >\n              <span className=\"\">Hire workers</span>\n            </Button>\n          </Link>\n        </div>\n      </Container>\n    </div>\n  </>\n);\n\nexport default Index;\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n  Form,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { userActions } from \"actions/user.actions\";\nimport { Redirect } from \"react-router-dom\";\nimport { __EMPLOYER_DASHBOARD } from \"routes\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // email: \"manish@gmail.com\",\n      email: 'janedoe@gmail.com',\n      password: \"password\",\n    };\n  }\n\n  handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.login(this.state);\n  };\n\n\n  render() {\n    const {auth} = this.props;\n    if (auth && auth.loggedIn && auth.isEmployer) return <Redirect to={__EMPLOYER_DASHBOARD} />\n    if (auth && auth.loggedIn && !auth.isEmployer) return <Redirect to=\"/workers/dashboard\" />\n    return (\n      <>\n        <div\n          className=\"page-header index-header\"\n          style={{ background: \"white\", position: \"relative\" }}\n        >\n          <div\n            style={{ position: \"absolute\", bottom: \"-52px\", right: \"-60px\" }}\n          >\n            <img\n              width=\"1000\"\n              alt=\"...\"\n              className=\"img\"\n              style={{ marginTop: \"-30px\" }}\n              src={require(\"assets/img/pablo-done.png\")}\n            />\n          </div>\n          <Container style={{ zIndex: 1 }}>\n            <div className=\"motto\">\n              <Row>\n                <Col md=\"5\">\n                  <div className=\"pt-2 mb-2 text-center\">\n                    <h1\n                      className=\"f- text-center mb-4 text-uppercase\"\n                      style={{ fontSize: \"3rem\" }}\n                    >\n                      Login\n                    </h1>\n                    <Form onSubmit={this.handleSubmit}>\n                      <FormGroup>\n                        <Input\n                          onChange={this.handleChange}\n                          value={this.state.email}\n                          name=\"email\"\n                          className=\"border-input\"\n                          placeholder=\"Enter the worker's email\"\n                          type=\"email\"\n                          size=\"lg\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <Input\n                          onChange={this.handleChange}\n                          value={this.state.password}\n                          name=\"password\"\n                          className=\"border-input\"\n                          placeholder=\"Enter Password\"\n                          type=\"password\"\n                          size=\"lg\"\n                        />\n                      </FormGroup>\n                      <Button\n                        className=\"btn mr-1\"\n                        onClick={this.handleSubmit}\n                        // color=\"\"\n                        // outline\n                        size=\"lg\"\n                        type=\"button\"\n                        style={{\n                          width: \"100%\",\n                          background: \"#82b5a5\",\n                          border: \"none\",\n                        }}\n                      >\n                        <span className=\"text-white\">Login</span>\n                      </Button>\n                    </Form>\n                  </div>\n                </Col>\n                <Col className=\"text-center\" md=\"7\"></Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ auth: state.authentication });\nconst mapDispatchToProps = { login: userActions.login };\nconst connected = connect(mapStateToProps, mapDispatchToProps)(Login);\n\nexport { connected as Login };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userActions } from \"actions\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { __JOB_CREATE } from \"routes\";\nimport { __JOB_INDEX } from \"routes\";\n\nclass EmployersDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.props.me();\n  }\n\n  // handleChange = e => {\n  //     // this.setState({ filename: name })\n  // }\n\n  // handleSubmit = (e) => {\n  //     e.preventDefault();\n\n  //     // this.props.getAllPlantImages();\n  // }\n\n  render() {\n    // console.info(this.props);\n    const { user } = this.props;\n    if (!user && !user.jobs) return <>loading</>;\n\n    return (\n      <>\n        <div className=\"section section-feature cd-section\" style={{paddingTop: 0}} id=\"features\">\n          <div className=\"features-1\">\n            <Container>\n              <Row>\n                <Col className=\"ml-auto mr-auto text-center\" md=\"8\">\n                  <h2 className=\"title text-capitalize\">\n                    {user.username}'s Dashboard\n                  </h2>\n                  <h5 className=\"description mb-4\">\n                  Hi there!, these are your linkedout statistics.\n                  </h5>\n                </Col>\n              </Row>\n              <Row className=\"mb-5 pb-5\">\n                <Col md=\"3\">\n                  <div className=\"info\">\n                    <div className=\"icon icon-danger\">{user.jobs.length}</div>\n                    <div className=\"description\">\n                      <h4 className=\"info-title\">Jobs Posted</h4>\n                      <p className=\"description mb-3\">\n                        Total count of jobs you have posted.\n                      </p>\n                      <Button\n                        className=\"btn-danger\"\n                        color=\"danger\"\n                        href={__JOB_INDEX}\n                      >\n                        See more\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n\n                <Col md=\"3\">\n                  <div className=\"info\">\n                    <div className=\"icon icon-success\">{user.jobs && (\n                      user.jobs.filter(item => item.requirment).length\n                    )}</div>\n                    <div className=\"description\">\n                      <h4 className=\"info-title\">Jobs Finished</h4>\n                      <p className=\"description mb-3\">\n                        Total count of jobs you have that are completed.\n                      </p>\n                      <Button\n                        className=\"btn-success\"\n                        color=\"success\"\n                        href={__JOB_INDEX}\n                      >\n                        See more\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n\n                <Col md=\"3\">\n                  <div className=\"info\">\n                    <div className=\"icon icon-primary\">100</div>\n                    <div className=\"description\">\n                      <h4 className=\"info-title\">Worker's hired</h4>\n                      <p className=\"description mb-3\">\n                      Total count of workers you have hired for all jobs.\n                      </p>\n                      <Button\n                        className=\"btn-parimay\"\n                        color=\"primary\"\n                        href={__JOB_INDEX}\n                      >\n                        See more\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n                <Col md=\"3\">\n                  <div className=\"info\">\n                    <div className=\"icon icon-info\">$100</div>\n                    <div className=\"description\">\n                      <h4 className=\"info-title\">Money Spend</h4>\n                      <p className=\"description mb-3\">\n                        Total amount of money spend on this platform.\n                      </p>\n                      <Button\n                        className=\"btn-info\"\n                        color=\"primary\"\n                        href={__JOB_INDEX}\n                      >\n                        See more\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"text-center pb-3 mt-3\">\n                <Link to={__JOB_CREATE} className=\"btn btn-lg btn-danger\">\n                  post a new job\n                </Link>\n                <Link to={__JOB_INDEX} className=\"btn btn-lg ml-1 btn-dark btn-outline-dark\">\n                  <span className=\"text-dark\">\n                  See All Jobs\n                  </span>\n                </Link>\n              </div>\n            </Container>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n});\n\nconst mapDispatchToProps = {\n  logout: userActions.logout,\n  me: userActions.getUser,\n};\n\nconst connected = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployersDashboard);\n\nexport { connected as EmployersDashboard };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { userActions } from \"actions\";\nimport { __WORKER_JOB_INDEX } from \"routes\";\n\nclass WorkersDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.props.me();\n  }\n\n  render() {\n    const { user } = this.props;\n\n    if (!user && !user.jobs) return <>loading</>;\n\n    return (\n      <div className=\"section section-feature cd-section pb-0\"  style={{paddingTop: 0}}  id=\"features\">\n        <div className=\"features-1\">\n          <Container>\n            <Row>\n              <Col className=\"ml-auto mr-auto text-center\" md=\"8\">\n                <h2 className=\"title text-capitalize\">\n                  {user.username}'s Dashboard\n                </h2>\n                <h5 className=\"description mb-4\">\n                  Hi there!, these are your linkedout statistics.\n                </h5>\n              </Col>\n            </Row>\n            <Row className=\"mb-5 pb-5\">\n              <Col md=\"3\">\n                <div className=\"info\">\n                  <div className=\"icon icon-danger\">1{user.jobs.length}</div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Jobs Applied</h4>\n                    <p className=\"description mb-3\">\n                      Total count of jobs you have applied.\n                    </p>\n                    <Button\n                      className=\"btn-danger\"\n                      color=\"danger\"\n                      href={'/'}\n                    >\n                      See more\n                    </Button>\n                  </div>\n                </div>\n              </Col>\n              <Col md=\"3\">\n                <div className=\"info\">\n                  <div className=\"icon icon-primary\">1</div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Jobs Assigned</h4>\n                    <p className=\"description mb-3\">\n                      Total count of jobs you got assigned\n                    </p>\n                    <Button\n                      className=\"btn-primary\"\n                      color=\"primary\"\n                      href={'/'}\n                    >\n                      See more\n                    </Button>\n                  </div>\n                </div>\n              </Col>\n              <Col md=\"6\">\n                <div className=\"info\">\n                  <div className=\"icon icon-info\">100$</div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Amount earned</h4>\n                    <p className=\"description mb-3\">\n                      Total amount of money earned form this <br />platform.\n                    </p>\n                    <Button\n                      className=\"btn-primary\"\n                      color=\"primary\"\n                      href={'/'}\n                    >\n                      See more\n                    </Button>\n                  </div>\n                </div>\n              </Col>\n\n            </Row>\n            <div className=\"text-center pb-3 mt-3\">\n              <Link to={__WORKER_JOB_INDEX} className=\"btn btn-lg btn-danger\">\n                find a new job\n              </Link>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n});\n\nconst mapDispatchToProps = {\n  logout: userActions.logout,\n  me: userActions.getUser,\n};\n\nconst connected = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkersDashboard);\n\nexport { connected as WorkersDashboard };\n","import { jobsService } from \"services\";\nimport { jobConstant } from \"./constants\";\nimport { history } from \"helpers/history\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\nimport { __WORKER_JOB_SHOW } from \"routes\";\nimport { __EMPLOYER_DASHBOARD } from \"routes\";\n\nconst postJob = (data) => {\n  return (dispatch) => {\n    jobsService.postJob(data).then((data) => {\n      dispatch({ type: jobConstant.CREATE_JOB, payload: data });\n      history.push(__EMPLOYER_DASHBOARD);\n      return { type: jobConstant.CREATE_JOB, payload: data };\n    });\n  };\n};\n\nconst getJob = (id) => {\n  return (dispatch) => {\n    dispatch(showLoading());\n    jobsService.getJob(id).then((data) => {\n      setTimeout(() => {\n        dispatch(hideLoading());\n      }, 2000);\n      dispatch({ type: jobConstant.GET_JOB, payload: data });\n      return { type: jobConstant.GET_JOB, payload: data };\n    });\n  };\n};\n\nconst getJobWorkers = (id) => {\n  return (dispatch) => {\n    jobsService.getJobWorkers(id).then((data) => {\n      dispatch({ type: jobConstant.GET_JOB_WORKERS, payload: data });\n      return { type: jobConstant.GET_JOB_WORKERS, payload: data };\n    });\n  };\n};\n\nconst getAllJobsForWorker = () => {\n  return (dispatch) => {\n    jobsService.getAllJobsForWorker().then((data) => {\n      dispatch({ type: jobConstant.GET_ALL_JOBS_FOR_WORKERS, payload: data });\n      return { type: jobConstant.GET_ALL_JOBS_FOR_WORKERS, payload: data };\n    });\n  };\n};\n\nconst getEmployerJobs = () => {\n  return (dispatch) => {\n    jobsService.getEmployerJobs().then((data) => {\n      dispatch({ type: jobConstant.GET_EMPLOYER_JOBS, payload: data });\n      return { type: jobConstant.GET_EMPLOYER_JOBS, payload: data };\n    });\n  };\n};\n\nconst apply = (id, data) => {\n  return (dispatch) => {\n    jobsService.apply(id, data).then((data) => {\n      history.push(__WORKER_JOB_SHOW(id));\n      dispatch({ type: jobConstant.APPLY_FOR_JOB, payload: data });\n      return { type: jobConstant.APPLY_FOR_JOB, payload: data };\n    });\n  };\n};\n\nconst updataApplicationStatus = (id, status) => {\n  return (dispatch) => {\n    jobsService.updataApplicationStatus(id, status).then((data) => {\n      history.push(__EMPLOYER_DASHBOARD);\n      dispatch({ type: jobConstant.UPDATE_JOB_APPLICATION_STATUS, payload: data });\n      return { type: jobConstant.UPDATE_JOB_APPLICATION_STATUS, payload: data };\n    });\n  };\n};\n\nexport const jobActions = {\n  postJob,\n  getJob,\n  getJobWorkers,\n  getAllJobsForWorker,\n  apply,\n  updataApplicationStatus,\n  getEmployerJobs\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userActions } from \"actions\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jobActions } from \"actions/job.action\";\nimport { __JOB_WORKERS_SHOW } from \"routes\";\nimport { __JOB_SHOW } from \"routes\";\n\nclass Workers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params._id;\n    this.props.getJob(id);\n  }\n  render() {\n    // console.info(this.props);\n    const { job } = this.props;\n    if (!job) return <>loading</>;\n\n    return (\n      <>\n        <div className=\"section section-feature cd-section\" id=\"features\">\n          <Container>\n            <Row>\n              <Col className=\"text-left\" md=\"8\">\n                <h2 className=\"title text-capitalize\">{job.title}'s Workers</h2>\n                <h5 className=\"description mb-4\">\n                    These are the workers that are selected for the job.\n                </h5>\n              </Col>\n              <Col md=\"2\">\n                <div className=\"info\">\n                  <div className=\"icon icon-danger\">{job.numberOfPeople}</div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Workers required</h4>\n                    <Button\n                      className=\"btn-link\"\n                      color=\"danger\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      See more\n                    </Button>\n                  </div>\n                </div>\n              </Col>\n              <Col md=\"2\">\n                <div className=\"info\">\n                  <div className=\"icon icon-danger\">{job.employees.length}</div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Workers Selected</h4>\n                    <Link to={__JOB_WORKERS_SHOW(this.props.match.params._id )}>\n                      <Button\n                        className=\"btn-link\"\n                        color=\"danger\"\n                      >\n                        See more\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n            <Row>Hello</Row>\n            <div className=\"text-left pb-3 mt-3\">\n              <Link to={__JOB_SHOW(job._id)} className=\"btn btn-dark\">\n                Back to Job\n              </Link>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n  job: state.job,\n});\n\nconst mapDispatchToProps = {\n  logout: userActions.logout,\n  getJob: jobActions.getJob,\n};\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(Workers);\n\nexport { connected as Workers };\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n  Form,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { __EMPLOYER_DASHBOARD } from \"routes\";\nimport { Link } from \"react-router-dom\";\nimport { jobActions } from \"actions/job.action\";\n\nclass JobsCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      numberOfPeople: \"\",\n      requirment: \"\",\n      location: \"\",\n      budget: 0\n    };\n  }\n\n  handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.post(this.state);\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"section \" id=\"features\">\n          <Container>\n            <Row>\n              <Col className=\"text-left\" md=\"8\">\n                <h2 className=\"title f-anon text-capitalize\">Post a new job</h2>\n                <h5 className=\"description mb-4\">\n                  This is the paragraph where you can write more details about\n                </h5>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <Form>\n                  <FormGroup>\n                    <Input\n                      onChange={this.handleChange}\n                      value={this.state.title}\n                      name=\"title\"\n                      className=\"border-input\"\n                      placeholder=\"Give this job a title\"\n                      type=\"text\"\n                      size=\"lg\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      onChange={this.handleChange}\n\n                      name=\"budget\"\n                      className=\"border-input\"\n                      placeholder=\"Budget\"\n                      type=\"text\"\n                      size=\"lg\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      onChange={this.handleChange}\n                      value={this.state.description}\n                      name=\"description\"\n                      className=\"border-input\"\n                      placeholder=\"Tell the worker about the job\"\n                      type=\"textarea\"\n                      style={{ height: 200 }}\n                      size=\"lg\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      onChange={this.handleChange}\n                      value={this.state.numberOfPeople}\n                      name=\"numberOfPeople\"\n                      className=\"border-input\"\n                      placeholder=\"How Many Workers do you required\"\n                      type=\"number\"\n                      size=\"lg\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Button\n                      onClick={this.handleSubmit}\n                      className=\"btn mr-1\"\n                      color=\"danger\"\n                      size=\"lg\"\n                      type=\"button\"\n                    >\n                      <span className=\"text-white\">Submit</span>\n                    </Button>\n                    <Link to={__EMPLOYER_DASHBOARD}>\n                      <Button\n                        className=\"btn mr-1\"\n                        color=\"dark\"\n                        outline\n                        size=\"lg\"\n                        type=\"button\"\n                      >\n                        <span className=\"text-dark\">back to dashboard</span>\n                      </Button>\n                    </Link>\n                  </FormGroup>\n                </Form>\n              </Col>\n              <Col md=\"6\">Sahani</Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ auth: state.authentication });\nconst mapDispatchToProps = { post: jobActions.postJob };\nconst connected = connect(mapStateToProps, mapDispatchToProps)(JobsCreate);\n\nexport { connected as JobsCreate };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userActions } from \"actions\";\nimport { Container, Row, Col, Button, Badge } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { __JOB_CREATE } from \"routes\";\nimport { jobActions } from \"actions/job.action\";\nimport { __JOB_WORKERS_SHOW } from \"routes\";\nimport { __JOB_INDEX } from \"routes\";\n\nclass JobsShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n\n    // this.accpet = this.accpet.bind(this)\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params._id;\n    this.props.getJob(id);\n  }\n\n  updataApplicationStatus(id, status) {\n    this.props.update(id, { status: status });\n  }\n\n  render() {\n    const { job } = this.props;\n    if (!job) return <>loading</>;\n\n    return (\n      <>\n        <div className=\"section section-feature cd-section\" id=\"features\">\n          <Container>\n            <Row>\n              <Col className=\"text-left\" md=\"8\">\n                <h2 className=\"title text-capitalize\">{job.title}</h2>\n                <h5 className=\"description mb-4\">{job.description}</h5>\n                <hr />\n                {job &&\n                  job.applicants &&\n                  job.applicants.map((item) => {\n                    return (\n                      <div key={item._id}>\n                        <Row>\n                          <Col md=\"5\" className=\"pt-2\">\n                            {item.comment}\n                          </Col>\n                          <Col md=\"2\" className=\"pt-2\">\n                            <Badge className=\"mr-1\" pill>\n                              {item.status}\n                            </Badge>\n                          </Col>\n                          <>\n                            <Col md=\"5 pr-4 text-right\">\n                              <Button\n                                className=\"btn mr-1\"\n                                color=\"danger\"\n                                onClick={(e) =>\n                                  this.updataApplicationStatus(\n                                    item._id,\n                                    \"rejected\"\n                                  )\n                                }\n                              >\n                                <span>Remove</span>\n                              </Button>\n                              <Button\n                                className=\"btn\"\n                                color=\"success\"\n                                value=\"accepted\"\n                                onClick={(e) =>\n                                  this.updataApplicationStatus(\n                                    item._id,\n                                    \"accepted\"\n                                  )\n                                }\n                              >\n                                <span>Approve</span>\n                              </Button>\n                            </Col>\n                          </>\n                        </Row>\n                        <hr />\n                      </div>\n                    );\n                  })}\n              </Col>\n              <Col md=\"2\">\n                <div className=\"info\">\n                  <div className=\"icon icon-danger\">{job.numberOfPeople}</div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Workers required</h4>\n                    <Button\n                      className=\"btn-link\"\n                      color=\"danger\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      See more\n                    </Button>\n                  </div>\n                </div>\n              </Col>\n              <Col md=\"2\">\n                <div className=\"info\">\n                  <div className=\"icon icon-danger\">\n                    {job.employees && job.employees.length}\n                  </div>\n                  <div className=\"description\">\n                    <h4 className=\"info-title\">Workers Selected</h4>\n                    <Link to={__JOB_WORKERS_SHOW(this.props.match.params._id)}>\n                      <Button className=\"btn-link\" color=\"danger\">\n                        See more\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n            <div className=\"text-left pb-3 mt-3\">\n              <Link to={__JOB_INDEX} className=\"btn btn-danger btn-lg mr-1\">\n                <span className=\"text-white\">Back to All Jobs</span>\n              </Link>\n              <Link\n                to={__JOB_CREATE}\n                className=\"btn btn-dark btn-lg btn-outline-dark\"\n              >\n                <span className=\"text-dark\">post a new job</span>\n              </Link>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n  job: state.job,\n});\n\nconst mapDispatchToProps = {\n  logout: userActions.logout,\n  getJob: jobActions.getJob,\n  update: jobActions.updataApplicationStatus,\n};\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(JobsShow);\n\nexport { connected as JobsShow };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { jobActions } from \"actions/job.action\";\nimport { __WORKER_JOB_SHOW } from \"routes\";\n\nclass WorkerJobIndex extends Component {\n  componentDidMount() {\n    this.props.jobs();\n  }\n\n  render() {\n    // console.info(this.props);\n    const { job } = this.props;\n\n    const renderCard = (item) => {\n      return (\n        <Card className=\"card-blog shadow-lg\">\n          <div className=\"card-image\">\n            {/* <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>d</a> */}\n          </div>\n          <CardBody>\n            {/* <h6 className=\"card-category text-info\">Enterprise</h6> */}\n            <CardTitle tag=\"h5\">\n              <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {item.title}\n              </a>\n            </CardTitle>\n            <p className=\"card-description\">\n              {item.description} <br />\n            </p>\n            {/* <hr /> */}\n            <CardFooter>\n              <div className=\"author\">\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  {/* <img\n                alt=\"...\"\n                className=\"avatar img-raised mr-2\"\n                src={require(\"assets/img/faces/ayo-ogunseinde-2.jpg\")}\n              /> */}\n                  <strong><span>Pays - {item.budget} / hr </span></strong>\n                </a>\n              </div>\n              <div className=\"stats\">\n                <Button\n                  className=\"btn-link p-0\"\n                  color=\"danger\"\n                  href={__WORKER_JOB_SHOW(item._id)}\n                >\n                  Details\n                </Button>\n              </div>\n            </CardFooter>\n          </CardBody>\n        </Card>\n      );\n    };\n\n    // console.info(job);\n    return (\n      <div className=\"section pt-5\">\n        {/* ********* BLOGS 2 ********* */}\n        <div className=\"blog-2 section pt-0\">\n          <Container>\n            <Row>\n              <Col className=\"ml-auto mr-auto\" md=\"12\">\n                <h2 className=\"title f-anon\">\n                Latest Jobs Near You\n                </h2>\n                <br />\n                <Row>\n                  {job &&\n                    job.jobs &&\n                    job.jobs.map((item) => (\n                      <Col md=\"4\" key={item._id}>\n                        {renderCard(item)}\n                      </Col>\n                    ))}\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        {/* ********* END BLOGS 2 ********* */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n  job: state.job,\n});\n\nconst mapDispatchToProps = {\n  jobs: jobActions.getAllJobsForWorker,\n};\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(WorkerJobIndex);\n\nexport { connected as WorkerJobIndex };\n","/*eslint-disable*/\nimport React from \"react\";\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\n// react plugin used to create switch buttons\nimport Switch from \"react-bootstrap-switch\";\n// react plugin used to create an image gallery\nimport { PhotoSwipeGallery } from \"react-photoswipe\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n  PopoverBody,\n  PopoverHeader,\n  UncontrolledPopover,\n  Modal,\n  Input,\n  Carousel,\n  CarouselItem,\n  CarouselIndicators,\n  CarouselCaption\n} from \"reactstrap\";\n\n// PhotoSwipe items\n\nlet options = {\n  //http://photoswipe.com/documentation/options.html\n};\n\nlet getThumbnailContent = item => {\n  return (\n    <div\n      className=\"gallery-item\"\n      itemProp=\"associatedMedia\"\n      itemScope=\"\"\n      itemType=\"http://schema.org/ImageObject\"\n    >\n      <a data-size=\"750x1002\" href={item.src} itemProp=\"contentUrl\">\n        <img\n          alt=\"...\"\n          className=\"vertical-image img-rounded img-responsive\"\n          itemProp=\"thumbnail\"\n          src={item.src}\n        />\n      </a>\n      <figcaption className=\"gallery-caption\" itemProp=\"caption description\">\n        {item.title}\n      </figcaption>\n    </div>\n  );\n};\n\n// carousel items\nconst carouselItems = [\n  {\n    src: 'https://static1.bigstockphoto.com/2/8/1/large1500/182407753.jpg',\n    altText: \"Somewhere\",\n    caption: \"Somewhere\"\n  },\n];\n\nfunction CustomCarousal() {\n  // modals states\n  const [classic, setClassic] = React.useState(false);\n  const [notice, setNotice] = React.useState(false);\n  const [smallAlert, setSmallAlert] = React.useState(false);\n  const [smallNotice, setSmallNotice] = React.useState(false);\n  const [login, setLogin] = React.useState(false);\n  const [register, setRegister] = React.useState(false);\n  // collapse states and functions\n  const [collapses, setCollapses] = React.useState([]);\n  const changeCollapse = collapse => {\n    if (collapses.includes(collapse)) {\n      setCollapses(collapses.filter(prop => prop !== collapse));\n    } else {\n      setCollapses([...collapses, collapse]);\n    }\n  };\n  // carousel states and functions\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const [animating, setAnimating] = React.useState(false);\n  const onExiting = () => {\n    setAnimating(true);\n  };\n  const onExited = () => {\n    setAnimating(false);\n  };\n  const next = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === carouselItems.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n  const previous = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === 0 ? carouselItems.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n  return (\n    <>\n      <div className=\"section section-blue javascript-components\">\n        <Container>\n          <Row>\n            <Col className=\"mr-auto pl-0\" md=\"10\">\n              <Card className=\"card-raised page-carousel\">\n                <Carousel\n                  activeIndex={activeIndex}\n                  next={next}\n                  previous={previous}\n                >\n                  <CarouselIndicators\n                    items={carouselItems}\n                    activeIndex={activeIndex}\n                    onClickHandler={goToIndex}\n                  />\n                  {carouselItems.map(item => {\n                    return (\n                      <CarouselItem\n                        onExiting={onExiting}\n                        onExited={onExited}\n                        key={item.src}\n                      >\n                        <img src={item.src} alt={item.altText} />\n                        <CarouselCaption\n                          captionText={item.caption}\n                          captionHeader=\"\"\n                        />\n                      </CarouselItem>\n                    );\n                  })}\n                  <a\n                    className=\"left carousel-control carousel-control-prev\"\n                    data-slide=\"prev\"\n                    href=\"#pablo\"\n                    onClick={e => {\n                      e.preventDefault();\n                      previous();\n                    }}\n                    role=\"button\"\n                  >\n                    <span className=\"fa fa-angle-left\" />\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                  <a\n                    className=\"right carousel-control carousel-control-next\"\n                    data-slide=\"next\"\n                    href=\"#pablo\"\n                    onClick={e => {\n                      e.preventDefault();\n                      next();\n                    }}\n                    role=\"button\"\n                  >\n                    <span className=\"fa fa-angle-right\" />\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </Carousel>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default CustomCarousal;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { userActions } from \"actions\";\nimport { Container, Row, Col, Button, Badge } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jobActions } from \"actions/job.action\";\nimport { __JOB_WORKERS_SHOW } from \"routes\";\nimport { __WORKER_JOB_INDEX } from \"routes\";\nimport CustomCarousal from \"components/Custom/Carousal\";\nimport { __WORKER_JOB_APPLY } from \"routes\";\n\nclass WorkerJobShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params._id;\n    this.props.getJob(id);\n    this.props.me();\n  }\n\n  renderItem = (item) => (\n    <Row>\n      <Col md=\"5\" className=\"pt-2\">\n        {item._id}\n      </Col>\n      <Col md=\"2\" className=\"pt-2\">\n        <Badge className=\"mr-1\" pill>\n          {item.status}\n        </Badge>\n      </Col>\n      <Col md=\"5 pr-4 text-right\">\n        <Button\n          className=\"btn mr-1\"\n          color=\"danger\"\n          onClick={(e) => e.preventDefault()}\n        >\n          <span>Remove</span>\n        </Button>\n        <Button\n          className=\"btn\"\n          color=\"success\"\n          onClick={(e) => e.preventDefault()}\n        >\n          <span>Approve</span>\n        </Button>\n      </Col>\n    </Row>\n  );\n\n  checkForApplied = (applicants, user) => {\n    const ans = applicants.filter((item) => item.employee === user._id);\n    // console.info(applicants);\n    // console.info(user)\n    // console.info(ans);\n    return ans;\n  };\n\n  render() {\n    // console.info(this.props);\n    const { job, user } = this.props;\n    if (!job) return <>loading</>;\n\n    const check = this.checkForApplied(job.applicants, user);\n    // console.info(check)\n    return (\n      <>\n        <div className=\"section section-feature cd-section\" id=\"features\">\n          <Container>\n            <Row>\n              <Col className=\"text-left\" md=\"8\">\n                <h2 className=\"title text-capitalize\">{job.title}</h2>\n                <h5 className=\"description mb-4\">{job.description}</h5>\n                <CustomCarousal />\n              </Col>\n              <Col md=\"4\">\n                <Row>\n                  <Col className=\"border-bottom pb-5\">\n                    <h2 className=\"text-center\">Pays 2000</h2>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"6\">\n                    <div className=\"info\">\n                      <div className=\"icon icon-danger\">\n                        {job.numberOfPeople}\n                      </div>\n                      <div className=\"description\">\n                        <h4 className=\"info-title\">Workers required</h4>\n                        <Button\n                          className=\"btn-link\"\n                          color=\"danger\"\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          See more\n                        </Button>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col md=\"6\">\n                    <div className=\"info\">\n                      <div className=\"icon icon-danger\">\n                        {job.employees.length}\n                      </div>\n                      <div className=\"description\">\n                        <h4 className=\"info-title\">Workers Selected</h4>\n                        <Link\n                          to={__JOB_WORKERS_SHOW(this.props.match.params._id)}\n                        >\n                          <Button className=\"btn-link\" color=\"danger\">\n                            See more\n                          </Button>\n                        </Link>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"text-center\">\n                    <div className=\"pb-4\">\n                      {check.length > 0 && (\n                        <>Already applied for the job.</>\n                      )}\n                      {!check.length && (\n                        <>Click the button to apply for the job.</>\n                      )}\n                    </div>\n                    <div className=\"\">\n                      <Link\n                        to={__WORKER_JOB_INDEX}\n                        className=\"btn btn-danger btn-lg mr-1\"\n                      >\n                        <span className=\"text-white\">Back to Jobs</span>\n                      </Link>\n                      {!check.length && (\n                        <Link\n                          to={__WORKER_JOB_APPLY(this.props.match.params._id)}\n                          className=\"btn btn-dark btn-lg btn-outline-dark\"\n                        >\n                          <span className=\"text-dark\">Apply</span>\n                        </Link>\n                      )}\n                      {check.length > 0 && (\n                        <Link\n                          to={__WORKER_JOB_APPLY(this.props.match.params._id)}\n                          className=\"btn btn-dark btn-lg btn-outline-success\"\n                        >\n                          <span className=\"text-success\">Status</span>\n                        </Link>\n                      )}\n                    </div>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n  job: state.job,\n});\n\nconst mapDispatchToProps = {\n  logout: userActions.logout,\n  getJob: jobActions.getJob,\n  me: userActions.getUser,\n};\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(WorkerJobShow);\n\nexport { connected as WorkerJobShow };\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n  Form,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { jobActions } from \"actions/job.action\";\nimport { userActions } from \"actions/user.actions\";\nimport { __WORKER_JOB_SHOW } from \"routes\";\nimport { __WORKER_JOB_INDEX } from \"routes\";\n\nconst Applied = ({ info }) => {\n  let color = \"green\";\n  if (info.status === \"pending\") color = \"#0a66c2\";\n  else if (info.status === \"rejected\") color = \"#c70039\";\n\n  return (\n    <>\n      <div\n        className=\"page-header index-header\"\n        style={{ background: \"white\", position: \"relative\" }}\n      >\n        <Container style={{ zIndex: 1 }}>\n          <div className=\"motto\">\n            <div>\n              {/* <Icon /> */}\n\n              <span className=\"index-icon-text f-righteous\">\n                <span\n                  className=\"text-white\"\n                  style={{\n                    background: color,\n                    paddingLeft: \"1rem\",\n                    paddingRight: \"1rem\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  {info.status}\n                </span>\n              </span>\n            </div>\n            <h1 className=\"font-for-motto text-left\">\n              {info.status === 'pending' && (<>You have already applied</>)}\n              {info.status === 'rejected' && (<>Sorry, you didn't jot the job.</>)}\n              {info.status === 'accepted' && (<>Wohoo, You got the job</>)}\n            </h1>\n            <h4 className=\"text-dark mb-5 f-anon\">\n            {info.status === 'pending' && (<>Employers are making there decisions. thank you for you patiance.</>)}\n              {info.status === 'rejected' && (<>Employers made the decision to move forward with other workers.\n              you can browse through our more jobs.</>)}\n              {/* These are the long lived disposable kubernetes containers,\n        that remembers its pervious state even after getting\n        destroyed.\n        Remocn leads to frictionless coding to develop multi-language Cloud & Desktop IDEs with state-of-the-art web technologies. */}\n            </h4>\n            {/* <Link to={__LOGIN_ROUTE}>\n            <Button\n              className=\"btn-round mr-1\"\n              color=\"dark\"\n              outline\n              size=\"lg\"\n              type=\"button\"\n            >\n              <span className=\"text-dark\">Worker Login</span>\n            </Button>\n          </Link> */}\n\n            {info.status === \"rejected\" && (\n              <Button\n                className=\"btn-round mr-1\"\n                color=\"dark\"\n                size=\"lg\"\n                type=\"button\"\n                href={__WORKER_JOB_INDEX}\n              >\n                <span className=\"\">check for other jobs</span>\n              </Button>\n            )}\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nclass WorkerJobApply extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comment: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params._id;\n    this.props.getJob(id);\n    this.props.me();\n  }\n\n  handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.apply(this.props.match.params._id, this.state);\n  };\n\n  checkForApplied = (applicants, user) => {\n    const ans = applicants.filter((item) => item.employee === user._id);\n    // console.info(applicants);\n    // console.info(user)\n    // console.info(ans);\n    return ans;\n  };\n\n  render() {\n    const { job, user } = this.props;\n    const check = this.checkForApplied(job.applicants, user);\n\n    if (check && check.length) return <Applied info={check[0]} />;\n\n\n    return (\n      <>\n        <div className=\"section \" id=\"features\">\n          <Container>\n            <Row>\n              <Col className=\"text-left\" md=\"8\">\n                <h2 className=\"title f-anon text-capitalize\">\n                  Apply for {job.title}\n                </h2>\n                <h5 className=\"description mb-4\">\n                  This is the paragraph where you can write more details about\n                </h5>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <Form onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    <Input\n                      onChange={this.handleChange}\n                      value={this.state.description}\n                      name=\"comment\"\n                      className=\"border-input\"\n                      placeholder=\"Tell the employer about the details of completion and your experience in this field\"\n                      type=\"textarea\"\n                      style={{ height: 200 }}\n                      size=\"lg\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Button\n                      onClick={this.handleSubmit}\n                      className=\"btn mr-1\"\n                      color=\"danger\"\n                      size=\"lg\"\n                      type=\"button\"\n                    >\n                      <span className=\"text-white\">Apply</span>\n                    </Button>\n                    <Link to={__WORKER_JOB_SHOW(this.props.match.params._id)}>\n                      <Button\n                        className=\"btn mr-1\"\n                        color=\"dark\"\n                        outline\n                        size=\"lg\"\n                        type=\"button\"\n                      >\n                        <span className=\"text-dark\">back to Job Info</span>\n                      </Button>\n                    </Link>\n                  </FormGroup>\n                </Form>\n              </Col>\n              <Col md=\"6\">Sahani</Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  job: state.job,\n  user: state.user,\n});\nconst mapDispatchToProps = {\n  getJob: jobActions.getJob,\n  apply: jobActions.apply,\n  me: userActions.getUser,\n};\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(WorkerJobApply);\n\nexport { connected as WorkerJobApply };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { jobActions } from \"actions/job.action\";\nimport { __JOB_SHOW } from \"routes\";\nimport { Link } from \"react-router-dom\";\nimport { __EMPLOYER_DASHBOARD } from \"routes\";\n\nclass JobIndex extends Component {\n  componentDidMount() {\n    this.props.jobs();\n  }\n\n  render() {\n    console.info(this.props);\n    const { job } = this.props;\n\n    const renderCard = (item) => {\n      return (\n        <Card className=\"card-blog shadow-lg\">\n          <div className=\"card-image\">\n            {/* <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>d</a> */}\n          </div>\n          <CardBody>\n            {/* <h6 className=\"card-category text-info\">Enterprise</h6> */}\n            <CardTitle tag=\"h5\">\n              <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {item.title}\n              </a>\n            </CardTitle>\n            <p className=\"card-description\">\n              {item.description} <br />\n            </p>\n            <CardFooter>\n              <div className=\"author\">\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  <span>Applicants - {item.employees.length}</span>\n                </a>\n              </div>\n              <div className=\"stats\">\n                <Link to={__JOB_SHOW(item._id)}>\n                  <Button\n                    className=\"btn-link p-0\"\n                    color=\"danger\"\n                  >\n                    Details\n                  </Button>\n                </Link>\n              </div>\n            </CardFooter>\n          </CardBody>\n        </Card>\n      );\n    };\n\n    console.info(job);\n    return (\n      <div className=\"section pt-5\">\n        {/* ********* BLOGS 2 ********* */}\n        <div className=\"blog-2 section pt-0\">\n          <Container>\n            <Row>\n              <Col className=\"mr-auto\" md=\"8\">\n                <h2 className=\"title f-anon\">Your Posted Jobs</h2>\n                <br />\n                <Row>\n                  {job &&\n                    job.jobs &&\n                    job.jobs.map((item) => (\n                      <Col md=\"6\" key={item._id}>\n                        {renderCard(item)}\n                      </Col>\n                    ))}\n                </Row>\n              </Col>\n              <Col>\n                <Row>\n                  <Col md=\"12 text-center mr-auto ml-auto\">\n                    <div className=\"info\">\n                      <div className=\"icon icon-danger\">\n                        {job.jobs && job.jobs.length}\n                      </div>\n                      <div className=\"description\">\n                        <h4 className=\"info-title\">Jobs Posted</h4>\n                        <p className=\"description\">\n                          Total count of jobs posted here\n                        </p>\n                      </div>\n                    </div>\n                    <Link to={__EMPLOYER_DASHBOARD}>\n                      <Button\n                        className=\"btn mr-1\"\n                        color=\"dark\"\n                        outline\n                        size=\"lg\"\n                        type=\"button\"\n                      >\n                        <span className=\"text-dark\">back to dashboard</span>\n                      </Button>\n                    </Link>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        {/* ********* END BLOGS 2 ********* */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  user: state.user,\n  job: state.job,\n});\n\nconst mapDispatchToProps = {\n  jobs: jobActions.getEmployerJobs,\n};\n\nconst connected = connect(mapStateToProps, mapDispatchToProps)(JobIndex);\n\nexport { connected as JobIndex };\n","import React from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LoadingBar from \"react-redux-loading-bar\";\nimport { Button } from \"reactstrap\";\nimport { history } from \"./helpers\";\nimport { userActions } from \"actions/user.actions\";\n\n// import LoadingBar from 'react-redux-loading-bar'\nimport Index from \"pages/Index\";\nimport { Login } from \"pages/Login\";\nimport { EmployersDashboard } from \"pages/employer/Dashboard\";\nimport { WorkersDashboard } from \"pages/worker/Dashboard\";\nimport { Workers } from \"pages/employer/jobs/Workers\";\nimport { JobsCreate } from \"pages/employer/jobs/Create\";\nimport { JobsShow } from \"pages/employer/jobs/Show\";\nimport { WorkerJobIndex } from \"pages/worker/jobs/WorkerJobIndex\";\nimport { WorkerJobShow } from \"pages/worker/jobs/WorkerJobShow\";\nimport { WorkerJobApply } from \"pages/worker/jobs/WorkerJobApply\";\nimport { JobIndex } from \"pages/employer/jobs/Index\";\n\n// Route paths\nimport { __LOGIN_ROUTE } from \"routes\";\nimport { __WORKER_DASHBOARD } from \"routes\";\nimport { __EMPLOYER_DASHBOARD } from \"routes\";\nimport { __JOB_SHOW } from \"routes\";\nimport { __JOB_CREATE } from \"routes\";\nimport { __JOB_WORKERS_SHOW } from \"routes\";\nimport { __JOB_INDEX } from \"routes\";\nimport { __WORKER_JOB_INDEX } from \"routes\";\nimport { __WORKER_JOB_SHOW } from \"routes\";\nimport { __WORKER_JOB_APPLY } from \"routes\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingBar: 0,\n    };\n  }\n  logout() {\n    // this.props.logout();\n    console.info(this.props)\n\n  }\n  render() {\n    const props = this.props;\n    return (\n      <div>\n        <div style={{ position: \"relative\", height: \"5px\", top: 0 }}>\n          <LoadingBar style={{ backgroundColor: \"#f11946\", height: \"5px\" }} />\n        </div>\n\n        <Router history={history}>\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <Index {...props} />} />\n            <Route path={__LOGIN_ROUTE} component={Login} />\n\n            {/* Employer Routes */}\n            <EmployerRoute\n              path={__EMPLOYER_DASHBOARD}\n              component={EmployersDashboard}\n              {...props}\n            />\n            <EmployerRoute path={__JOB_INDEX} component={JobIndex} {...props} />\n            <EmployerRoute\n              path={__JOB_CREATE}\n              component={JobsCreate}\n              {...props}\n            />\n            <EmployerRoute\n              exact\n              path={__JOB_SHOW(\":_id\")}\n              component={JobsShow}\n              {...props}\n            />\n            <EmployerRoute\n              path={__JOB_WORKERS_SHOW(\":_id\")}\n              component={Workers}\n              {...props}\n            />\n\n            {/* Worker Routes */}\n            <PrivateRoute\n              path={__WORKER_DASHBOARD}\n              component={WorkersDashboard}\n              {...props}\n            />\n            <PrivateRoute\n              exact\n              path={__WORKER_JOB_SHOW(\":_id\")}\n              component={WorkerJobShow}\n              {...props}\n            />\n            <PrivateRoute\n              path={__WORKER_JOB_APPLY(\":_id\")}\n              component={WorkerJobApply}\n              {...props}\n            />\n            <PrivateRoute\n              path={__WORKER_JOB_INDEX}\n              component={WorkerJobIndex}\n              {...props}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst EmployerRoute = ({ component: Component, ...rest }) => {\n  if (rest.auth && rest.auth.isEmployer) {\n    return (\n      <PrivateRoute\n        component={Component}\n        path={rest.path}\n        auth={rest.auth}\n        {...rest}\n      />\n    );\n  }\n  return <Redirect to={__LOGIN_ROUTE} />;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        rest.auth.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: __LOGIN_ROUTE, state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.authentication,\n  state: state,\n});\nconst mapDispatchToProps = { logout: userActions.logout };\nconst connected = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport { connected as App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"helpers\";\n\n// styles\nimport \"assets/css/bootstrap.min.css\";\nimport \"assets/scss/paper-kit.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/demo/react-demo.css\";\n\n// pages\nimport { App } from \"App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/pablo-done.9ea8ee47.png\";"],"sourceRoot":""}